# # This workflow uses actions that are not certified by GitHub.
# # They are provided by a third-party and are governed by
# # separate terms of service, privacy policy, and support
# # documentation.

# name: Elixir CI

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# permissions:
#   contents: read

# jobs:
#   build:

#     name: Build and test
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up Elixir
#       uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
#       with:
#         elixir-version: '1.17.3' # [Required] Define the Elixir version
#         otp-version: '27.0'      # [Required] Define the Erlang/OTP version
#     - name: Restore dependencies cache
#       uses: actions/cache@v3
#       with:
#         path: deps
#         key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
#         restore-keys: ${{ runner.os }}-mix-
#     - name: Install dependencies
#       run: mix deps.get
#     - name: Run tests
#       run: mix test

name: Elixir CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: stores_api_dev
        ports:
          - 5500:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: '1.17.0' # specify the Elixir version
        otp-version: '27.0'      # specify the OTP version

    - name: Install dependencies
      run: mix deps.get

    - name: Wait for PostgreSQL
      run: |
        while ! pg_isready -h localhost -p 5500 -U postgres; do
          echo "Waiting for Postgres...";
          sleep 1;
        done

    - name: Run Tests
      env:
        MIX_ENV: test
        DATABASE_URL: "ecto://postgres:postgres@localhost:5500/stores_api_dev"
      run: mix test
